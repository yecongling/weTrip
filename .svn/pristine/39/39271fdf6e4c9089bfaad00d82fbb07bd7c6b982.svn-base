package com.foo.wetrip.controller;

import com.alibaba.fastjson.JSON;
import com.foo.wetrip.bean.Picture;
import com.foo.wetrip.bean.Scenic;
import com.foo.wetrip.bean.ScenicType;
import com.foo.wetrip.service.CommentsService;
import com.foo.wetrip.service.ScenicService;
import com.foo.wetrip.util.CalculateResult;
import com.foo.wetrip.util.CommentsAndUserUtil;
import com.foo.wetrip.util.ScenicUtil;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.File;
import java.io.IOException;
import java.util.List;

/**
 * @Author: Wonderland
 * @Date: 2019/2/26 11:43
 * @Description: com.foo.wetrip.controller
 * weTrip
 */

@Controller
public class ScenicController {

    @Autowired
    private ScenicService scenicService;
    @Autowired
    private CommentsService commentsService;

    @RequestMapping("/scenic-list")
    public ModelAndView allPicture() {
        ModelAndView modelAndView = new ModelAndView();
        List<ScenicUtil> scenicUtilList = scenicService.selectScenic();
        modelAndView.addObject("scenicUtilList",scenicUtilList);
        modelAndView.setViewName("/back/picture-list");
        return modelAndView;
    }
    // 测试用的controller
    @RequestMapping("/test")
    public String test(){
        return "scenic/scenic";
    }

    @RequestMapping(value = "/scenic")
    public String getScenic(HttpServletRequest request, Model model){
        Integer scenicId = Integer.valueOf(request.getParameter("scenicId"));
        Scenic scenic = scenicService.getScenicById(scenicId);
        Integer pictureId = scenic.getPictureId();
        Picture picture = scenicService.getPicture(pictureId);
        List<CommentsAndUserUtil> cauList = commentsService.getcommentsListWtihUserList(scenicId);

        CalculateResult result = commentsService.calculateResult(cauList);
        if (result!=null){
            model.addAttribute("average",result.getAverage());

        }else {
            model.addAttribute("average","暂无评分");
        }
        model.addAttribute("scenic",scenic);
        model.addAttribute("picture",picture);
        return "scenic/scenic";
    }

    @RequestMapping("/updateScenic")
    public void updateScenicStatus(HttpServletRequest request,HttpServletResponse response) throws IOException{
        Integer scenicId = Integer.valueOf(request.getParameter("scenicId"));
        System.out.println(scenicId);
        scenicService.updateScenicStatus(scenicId);
        // 设置响应头
        response.setCharacterEncoding("utf-8");
        response.setContentType("text/html;charset=utf-8");
        response.getWriter().print("1");
    }



    @RequestMapping("/scenic-edit")
    public void editScenic(HttpServletRequest request, HttpServletResponse response) throws IOException {
        Integer scenicId = Integer.valueOf(request.getParameter("scenicId"));
        ScenicUtil scenicUtil = scenicService.selectByScenicId(scenicId);
        // 把java对象序列化为json
        String json = JSON.toJSONString(scenicUtil,true);
        // 设置响应头
        response.setCharacterEncoding("utf-8");
        response.setContentType("text/html;charset=utf-8");
        // 输出json字符串
        response.getWriter().print(json);
    }


    @RequestMapping("/scenic-update")
    public void updateScenic(HttpServletRequest request, HttpServletResponse response) throws IOException{
        Integer scenicId = Integer.valueOf(request.getParameter("scenicId"));
        String scenicName = request.getParameter("scenicName");
        String address = request.getParameter("address");
        String price = request.getParameter("price");
        String description = request.getParameter("description");
        // 修改景点的状态
        scenicService.updateScenic(scenicId,scenicName,address,price,description);
        response.getWriter().print("1");
    }



    @RequestMapping("/scenic-add")
    public ModelAndView addPicture() {
        ModelAndView modelAndView = new ModelAndView();
        List<ScenicType> scenicTypes = scenicService.selectAllScenicType();
        modelAndView.addObject("scenicTypes",scenicTypes);
        modelAndView.setViewName("back/scenic-add");
        return modelAndView;
    }


    @RequestMapping("/picture-upload")
    public void pictureUpload(MultipartFile file,HttpServletRequest request,HttpServletResponse response) throws IOException{
        // 设置编码
        request.setCharacterEncoding("utf-8");
        response.setContentType("text/html;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        // 保存文件到指定的路径
        String path = request.getSession().getServletContext().getRealPath("/static/img");
        // 获取文件名
        String fileName = file.getOriginalFilename();
        System.out.println(fileName);
        // 把文件放到指定的位置
        File dir = new File(path,fileName);
        file.transferTo(dir);
        System.out.println( "=================================================>" + dir);
        HttpSession session = request.getSession();
        session.setAttribute("img",fileName);
    }

    @RequestMapping("/scenic-put")
    public String scenicPut(HttpServletRequest request){
        //获取景点名字
        String scenicName = request.getParameter("scenicName");
        // 获得景点的地址
        String address = request.getParameter("address");
        // 获得景点的类别编号
        Integer scenicTypeId = Integer.valueOf(request.getParameter("scenicType"));
        // 获得景点的票价
        String price = request.getParameter("price");
        // 获得景点的描述
        String description = request.getParameter("description");
        // 获得景点图片的名字
        String img = (String)request.getSession().getAttribute("img");
        // 插入到数据库中
        scenicService.insertScenic(scenicName,address,scenicTypeId,price,description,img);
        return "redirect:/scenic-list";
    }

    @RequestMapping("/searchScenic")
    public ModelAndView searchAddress(HttpServletRequest request){
        ModelAndView modelAndView = new ModelAndView();
        String scenicName = request.getParameter("scenicName");
        System.out.println("====================" +scenicName);
        modelAndView.addObject("address",scenicName);
        modelAndView.setViewName("scenic/searchAddress");
        return modelAndView;
    }

    @RequestMapping("/distance")
    public ModelAndView distance(HttpServletRequest request){
        String scenicName = request.getParameter("scenicName");
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.addObject("scenicName",scenicName);
        modelAndView.setViewName("scenic/distance");
        return modelAndView;
    }
}
