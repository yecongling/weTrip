package com.foo.wetrip.controller;


import com.foo.wetrip.bean.Users;
import com.foo.wetrip.service.SendService;
import com.foo.wetrip.util.SendMessage;
import org.apache.commons.httpclient.HttpException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.util.HashMap;

/**
  * 从数据库查找是否被注册
  * 如果没被注册{
  * 发送短信，保存验证码到缓存
  * }else{
  * 返回注册页面
  * }
  * 
  *  将输入的验证码与缓存中的验证码比对
  *  如果一致{
  *  注册
  *  }不一致{
  *  }
  * 
  */
@Controller
public class Send {

    @Autowired
    private SendService sendService;


    @ResponseBody
    @RequestMapping(value="sendMe" ,method = RequestMethod.GET)
    public ModelAndView sendMe(@RequestParam(value="phoneNum") String phoneNum,
                               HttpServletRequest request) throws HttpException, IOException {
        System.out.println("asd");
        ModelAndView model = new ModelAndView();
        if (!sendService.selectPhone(phoneNum)) {//查找是否被注册
            HashMap<String, String> m = SendMessage.getMessageStatus(phoneNum); //应用发送短信接口  
            String result = m.get("result");//获取到result值  
            System.out.println(result+"这是一个result");
            if (result.trim().equals("1")) {
                String code = m.get("code");
                System.out.println(code + "============================================================================");
                HttpSession session = request.getSession(); //设置session  
                session.setAttribute("code", code); //将短信验证码放到session中保存  
                session.setMaxInactiveInterval(60 * 3); //缓存设置3分钟
                model.addObject("flag", "短信发送成功");
            } else {
                model.addObject("flag", "短信发送失败,请重试");
            }
            model.addObject("phone", phoneNum);
            model.setViewName("/users/register");
        } else {
            model.addObject("flag1", "该手机号已被注册");
            model.addObject("phone", phoneNum);
            model.setViewName("/users/register");
        }
        return model;

    }


    @RequestMapping(value="register" ,method = RequestMethod.POST)
    public ModelAndView register(@RequestParam(value="code") String code, Users users, HttpServletRequest request){
        ModelAndView model = new ModelAndView();
//从session中比对发送的验证码
        HttpSession session = request.getSession();//设置session
        String sessioncode =(String) session.getAttribute("code");
        System.out.println(sessioncode+"缓存中的短信验证码");


        if((code).equals(sessioncode)){//比对缓存
//注册

            sendService.add(users);

            model.addObject("result", "注册成功");
        }
        else{
            model.addObject("result", "验证码不正确 ，注册失败");
            model.setViewName("/users/register");
        }
        model.setViewName("/index");

        return model;

    }

}